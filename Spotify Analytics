# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

SELECT distinct artist_name
FROM Spotifydata

select artist_name,track_name,popularity
from Spotifydata
where artist_name = 'Olivia Rodrigo';

SELECT artist_name,track_name,popularity
FROM Spotifydata
order by popularity desc

SELECT artist_name, avg(popularity) as AvgPopularity
FROM Spotifydata
GROUP BY artist_name
order by AvgPopularity desc
limit 10;

SELECT artist_name,track_name, MAX(duration_ms)
FROM Spotifydata;

SELECT artist_name,track_name, duration_ms FROM Spotifydata
ORDER BY duration_ms desc LIMIT 1;

SELECT artist_name,track_name,danceability FROM Spotifydata
ORDER BY danceability desc;

SELECT artist_name,track_name,danceability FROM Spotifydata
ORDER BY danceability desc
LIMIT 1; 

SELECT artist_name,track_name,energy FROM Spotifydata
order by energy desc; 

SELECT artist_name,track_name,energy FROM Spotifydata
where energy >= .7
order by energy desc; 

SELECT artist_name,track_name,AVG(danceability) FROM Spotifydata
GROUP BY artist_name,track_name
ORDER BY AVG(danceability) desc;

SELECT artist_name,track_name,danceability,popularity FROM Spotifydata
ORDER BY popularity desc, danceability desc LIMIT 10; 

SELECT artist_name,track_name,AVG(danceability),popularity FROM Spotifydata
GROUP BY artist_name,track_name 
ORDER BY popularity desc ; 

SELECT artist_name,track_name, AVG(danceability), popularity FROM Spotifydata
GROUP BY artist_name, track_name ; 

SELECT artist_name,track_name,popularity,danceability,energy FROM Spotifydata
GROUP BY artist_name, track_name;

SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

WITH temptable AS (
SELECT artist_name, AVG(popularity) as avg_popularity
FROM Spotifydata
GROUP BY artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM temptable
WHERE avg_popularity >=90;

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
