# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Then I inserted the Spotify Data .csv into the table.

# Next, I explored the data using the following SQL. 

# Popularity of Olivia Rodrigo songs.
select artist_name,track_name,popularity
from Spotifydata
where artist_name = 'Olivia Rodrigo'
order by popularity desc;

# Order of songs by popularity.
SELECT artist_name,track_name,popularity
FROM Spotifydata
order by popularity desc;

# Top ten most popular artists.
SELECT artist_name, avg(popularity) as AvgPopularity
FROM Spotifydata
GROUP BY artist_name
order by AvgPopularity desc
limit 10;

# The longest song.
SELECT artist_name,track_name, MAX(duration_ms)
FROM Spotifydata;

# The top 20 most danceable songs.
SELECT artist_name,track_name,danceability FROM Spotifydata
ORDER BY danceability desc
LIMIT 20;

# Songs that could be used for a workout playlist.
SELECT artist_name,track_name,energy FROM Spotifydata
where energy >= .7
order by energy desc; 

# A list of the average dacneability of each song from most danceable to least.
SELECT artist_name,track_name,AVG(danceability) FROM Spotifydata
GROUP BY artist_name,track_name
ORDER BY AVG(danceability) desc;

# This is a list of songs ordered by popularity and danceability.
SELECT artist_name,track_name,danceability,popularity FROM Spotifydata
ORDER BY popularity desc, danceability desc LIMIT 10; 

# This is the popularity, danceability and energy of songs by each artist.
SELECT artist_name,track_name,popularity,danceability,energy FROM Spotifydata
GROUP BY artist_name, track_name;

# I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

# I calculated the average popularity for the artists in the Spotify data table. I then named the artists with poplarity of 90 or above as Top Star
WITH temptable AS (
SELECT artist_name, AVG(popularity) as avg_popularity
FROM Spotifydata
GROUP BY artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM temptable
WHERE avg_popularity >=90;
